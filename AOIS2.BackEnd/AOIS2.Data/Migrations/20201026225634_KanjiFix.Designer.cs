// <auto-generated />
using AOIS2.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AOIS2.Data.Migrations
{
    [DbContext(typeof(DataStorageContext))]
    [Migration("20201026225634_KanjiFix")]
    partial class KanjiFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AOIS2.Core.Domain.Models.JoinModels.KanjiWithReadingAndWordsRadical", b =>
                {
                    b.Property<int>("KanjiWithReadingAndWordsId")
                        .HasColumnType("int");

                    b.Property<int>("RadicalId")
                        .HasColumnType("int");

                    b.HasKey("KanjiWithReadingAndWordsId", "RadicalId");

                    b.HasIndex("RadicalId");

                    b.ToTable("KanjiWithReadingAndWordsRadical");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.JoinModels.KanjiWithReadingRadical", b =>
                {
                    b.Property<int>("KanjiWithReadingId")
                        .HasColumnType("int");

                    b.Property<int>("RadicalId")
                        .HasColumnType("int");

                    b.HasKey("KanjiWithReadingId", "RadicalId");

                    b.HasIndex("RadicalId");

                    b.ToTable("KanjiWithReadingRadical");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.JoinModels.KanjiWithWordsRadical", b =>
                {
                    b.Property<int>("KanjiWithWordsId")
                        .HasColumnType("int");

                    b.Property<int>("RadicalId")
                        .HasColumnType("int");

                    b.HasKey("KanjiWithWordsId", "RadicalId");

                    b.HasIndex("RadicalId");

                    b.ToTable("KanjiWithWordsRadical");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.Kanji.KanjiWithReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JLPTLevel")
                        .HasColumnType("int");

                    b.Property<string>("Kanji")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Reading")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("KanjisWithReading");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.Kanji.KanjiWithReadingAndWords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kanji")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Reading")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Strokes")
                        .HasColumnType("int");

                    b.Property<string>("Words")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("KanjisWithReadingAndWords");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.Kanji.KanjiWithWords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kanji")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("Strokes")
                        .HasColumnType("int");

                    b.Property<int>("TaughtInGrade")
                        .HasColumnType("int");

                    b.Property<string>("Words")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("KanjisWithWords");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.Radicals.Radical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int>("Strokes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Radicals");
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.JoinModels.KanjiWithReadingAndWordsRadical", b =>
                {
                    b.HasOne("AOIS2.Core.Domain.Models.Kanji.KanjiWithReadingAndWords", "KanjiWithReadingAndWords")
                        .WithMany("KanjiWithReadingAndWordsRadicals")
                        .HasForeignKey("KanjiWithReadingAndWordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOIS2.Core.Domain.Models.Radicals.Radical", "Radical")
                        .WithMany("KanjiWithReadingAndWordsRadicals")
                        .HasForeignKey("RadicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.JoinModels.KanjiWithReadingRadical", b =>
                {
                    b.HasOne("AOIS2.Core.Domain.Models.Kanji.KanjiWithReading", "KanjiWithReading")
                        .WithMany("KanjiWithReadingRadicals")
                        .HasForeignKey("KanjiWithReadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOIS2.Core.Domain.Models.Radicals.Radical", "Radical")
                        .WithMany("KanjiWithReadingRadicals")
                        .HasForeignKey("RadicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AOIS2.Core.Domain.Models.JoinModels.KanjiWithWordsRadical", b =>
                {
                    b.HasOne("AOIS2.Core.Domain.Models.Kanji.KanjiWithWords", "KanjiWithWords")
                        .WithMany("KanjiWithWordsRadicals")
                        .HasForeignKey("KanjiWithWordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOIS2.Core.Domain.Models.Radicals.Radical", "Radical")
                        .WithMany("KanjiWithWordsRadicals")
                        .HasForeignKey("RadicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
